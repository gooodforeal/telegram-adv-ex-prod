import logging
from aiogram import Router, Bot, F
from aiogram.filters import Command
from aiogram.types import Message
from src.config import settings
from src.logs.config import configure_logging
from src.keyboards.admin_kb import get_admin_kb
from src.repositories.users_repository import UsersRepository

logger = logging.getLogger(__name__)
configure_logging()

router = Router()


@router.message(F.text == "üìã –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
async def command_admin(message: Message, bot: Bot):
    if message.from_user.id == settings.ADMIN_ID:
        users_list = await UsersRepository.find_all()
        formated_list = [f"ID: {user.id}\nTG_ID: {user.tg_id}\n–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {user.created_at}"
                         f"\n–ü–æ—Å–ª–µ–¥–Ω—è—è –≤—ã–¥–∞—á–∞: {user.last_time_given}\n–†–µ—Ñ–µ—Ä–∞–ª: {user.is_reffed}" for user in
                         users_list]
        for user in formated_list:
            await message.answer(
                text=user
            )
    else:
        await message.answer(
            text=f"‚õîÔ∏è –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!"
        )


@router.message(Command("admin"))
async def command_admin(message: Message, bot: Bot):
    logger.info("New admin panel request from user: %r", message.from_user.id)
    if message.from_user.id == settings.ADMIN_ID:
        await message.answer(
            text=f"–í—ã –∞–¥–º–∏–Ω!",
            reply_markup=get_admin_kb()
        )
    else:
        await message.answer(
            text=f"‚õîÔ∏è –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!"
        )
